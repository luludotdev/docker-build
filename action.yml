name: Docker Build
description: Build with Docker and push to ghcr.io
inputs:
  token:
    description: GitHub Token
    required: true
  image-name:
    description: Docker image name
    required: true
  context:
    description: Build context
    required: true
    default: '.'
  file:
    description: Path to Dockerfile
    required: false
  platforms:
    description: Image multi-arch platforms
    required: true
    default: linux/amd64
  fetch-depth:
    description: Checkout fetch depth
    required: false
    default: ''
  push:
    description: Push to ghrc.io
    required: true
    default: ${{ (github.ref == 'refs/heads/master') || (contains(github.ref, 'refs/tags/') == true) }}
outputs:
  image:
    description: Docker image
    value: ${{ steps.prepare.outputs.docker_image }}:${{ steps.prepare.outputs.version }}
  tag:
    description: Image tag
    value: ${{ steps.prepare.outputs.version }}
runs:
  using: composite
  steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: ${{ inputs.fetch-depth }}
    - name: Prepare
      id: prepare
      shell: bash
      run: |
        IMAGE_NAME=${{ inputs.image-name }}

        GIT_REPO='https://github.com/${{ github.repository }}'
        DOCKER_USER=`echo ${{ github.repository_owner }} | tr '[:upper:]' '[:lower:]'`
        DOCKER_IMAGE=ghcr.io/$DOCKER_USER/$IMAGE_NAME

        VERSION=`git rev-parse --short HEAD`
        if [[ $GITHUB_REF == refs/tags/* ]]; then
          VERSION=${GITHUB_REF#refs/tags/v}
        fi

        echo "git_repo=${GIT_REPO}" >> $GITHUB_OUTPUT
        echo "docker_user=${DOCKER_USER}" >> $GITHUB_OUTPUT
        echo "docker_image=${DOCKER_IMAGE}" >> $GITHUB_OUTPUT
        echo "version=${VERSION}" >> $GITHUB_OUTPUT
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v3
    - name: Login to Docker Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ steps.prepare.outputs.docker_user }}
        password: ${{ inputs.token }}
    - name: Build and Push
      uses: docker/build-push-action@v5
      with:
        context: ${{ inputs.context }}
        file: ${{ inputs.file }}
        push: ${{ inputs.push }}
        tags: |
          ${{ steps.prepare.outputs.docker_image }}:latest
          ${{ steps.prepare.outputs.docker_image }}:${{ steps.prepare.outputs.version }}
        build-args: |
          GIT_VERSION=${{ steps.prepare.outputs.version }}
          GIT_REPO=${{ steps.prepare.outputs.git_repo }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        platforms: ${{ inputs.platforms }}
