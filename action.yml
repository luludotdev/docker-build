name: Docker Build
description: Build with Docker and push to ghcr.io
inputs:
  token:
    description: GitHub Token
    required: true
  image-name:
    description: Docker image name
    required: true
  context:
    description: Build context
    required: true
    default: "."
  file:
    description: Path to Dockerfile
    required: false
  platforms:
    description: Image multi-arch platforms
    required: true
    default: linux/amd64
  fetch-depth:
    description: Checkout fetch depth
    required: false
    default: ""
  push:
    description: Push to ghcr.io
    required: true
    default: ${{ (github.ref_name == github.event.repository.default_branch) || (contains(github.ref, 'refs/tags/') == true) }}
  sign:
    description: Sign the image using Sigstore
    required: true
    default: ""
outputs:
  tags:
    description: Image tags
    value: ${{ steps.meta.outputs.tags }}
runs:
  using: composite
  steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: ${{ inputs.fetch-depth }}
    - name: Install Cosign
      if: ${{ inputs.sign }}
      uses: sigstore/cosign-installer@v3.3.0
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v3
    - name: Login to Docker Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ inputs.token }}
    - name: Extract Metadata
      uses: docker/metadata-action@v5
      id: meta
      with:
        images: ghcr.io/${{ github.repository_owner }}/${{ inputs.image-name }}
        tags: |
          type=ref,event=branch
          type=ref,event=tag
          type=sha,prefix=
          type=sha,format=long,prefix=
          type=raw,value=latest,enable={{ is_default_branch }}
    - name: Build and Push
      uses: docker/build-push-action@v6
      id: build-and-push
      env:
        DOCKER_BUILD_RECORD_UPLOAD: false
      with:
        context: ${{ inputs.context }}
        file: ${{ inputs.file }}
        push: ${{ inputs.push }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        annotations: ${{ steps.meta.outputs.annotations }}
        build-args: |
          GIT_SHA=${{ github.sha }}
          GITHUB_REPO=${{ github.repository }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        platforms: ${{ inputs.platforms }}
    - name: Sign Image
      if: ${{ inputs.sign }}
      shell: bash
      run: echo "${TAGS}" | xargs -I {} cosign sign --yes {}@${DIGEST}
      env:
        DIGEST: ${{ steps.build-and-push.outputs.digest }}
        TAGS: ${{ steps.meta.outputs.tags }}
